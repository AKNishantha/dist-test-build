{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/toolbar/toolbar.component.css","webpack:///./src/app/toolbar/toolbar.component.html","webpack:///./src/app/toolbar/toolbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { AdalGuard } from 'adal-angular4';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, canActivate: [AdalGuard] },\r\n  { path: '**', component: NotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-toolbar></app-toolbar>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { AdalService } from 'adal-angular4';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor(private adalService: AdalService) {\r\n\r\n    adalService.init(environment.config);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\n\r\nimport { MaterialModule } from './material/material.module';\r\n\r\nimport { AdalService, AdalGuard, AdalInterceptor } from 'adal-angular4';\r\n\r\nimport {MatTableModule} from '@angular/material/table';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NotFoundComponent,\r\n    ToolbarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    MatTableModule\r\n  ],\r\n  providers: [\r\n    AdalService,\r\n    AdalGuard,\r\n    { provide: HTTP_INTERCEPTORS, useClass: AdalInterceptor, multi: true }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"table{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0NBQ2IiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<!--<mat-card style=\\\"width: 650px; overflow: elipses; margin: 0 auto; margin-top: 30px;\\\">-->\\r\\n<!--  <pre>-->\\r\\n<!--    {{user | json}}-->\\r\\n<!--  </pre>-->\\r\\n<!--</mat-card>-->\\r\\n<!--<p>-->\\r\\n<!--  <button name=\\\"Profile\\\" (click)=\\\"profileClicked()\\\">Get My Profile</button>-->\\r\\n<!--</p>-->\\r\\n<!--<mat-card *ngIf=\\\"profile\\\" style=\\\"width: 650px; overflow: elipses; margin: 0 auto; margin-top: 30px;\\\">-->\\r\\n<!--  <pre>-->\\r\\n<!--    {{profile | json}}-->\\r\\n<!--  </pre>-->\\r\\n<!--</mat-card>-->\\r\\n\\r\\n<table mat-table [dataSource]=\\\"data\\\" class=\\\"mat-elevation-z8\\\">\\r\\n    <!-- id Definition -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Id </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eliment\\\"> {{eliment.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- user Definition -->\\r\\n    <ng-container matColumnDef=\\\"user\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> User </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eliment\\\"> {{eliment.user}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- class Definition -->\\r\\n    <ng-container matColumnDef=\\\"class\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Class </th>\\r\\n      <td mat-cell *matCellDef=\\\"let eliment\\\"> {{eliment.class}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Header and Row Declarations -->\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColunms\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns:displayedColunms ;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdalService } from 'adal-angular4';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  user: any;\r\n  profile: any;\r\n\r\n  displayedColunms: string[] = ['id', 'user', 'class'];\r\n  data = [];\r\n\r\n\r\n  constructor(private adalService: AdalService, protected http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.user = this.adalService.userInfo;\r\n\r\n    this.user.token = this.user.token.substring(0, 10) + '...';\r\n    this.loadStudentInformation();\r\n  }\r\n\r\n  studentGet(){\r\n    return this.http.get('https://azure-redis-cache-app.azurewebsites.net/azurestudent/get');\r\n  }\r\n\r\n  loadStudentInformation(){\r\n    this.studentGet().subscribe({\r\n      next: result => {\r\n        console.log(result);\r\n        this.data = result['data']['data'];\r\n      }\r\n    });\r\n  }\r\n\r\n  public getProfile() {\r\n    console.log('Get Profile called');\r\n    return this.http.get('https://graph.microsoft.com/v1.0/me');\r\n  }\r\n\r\n  public profileClicked() {\r\n    this.getProfile().subscribe({\r\n      next: result => {\r\n        console.log('Profile Response Received');\r\n        this.profile = result;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule, MatCardModule, MatToolbarModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatToolbarModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatToolbarModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class MaterialModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  not-found works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".fill-remaining-space {\\r\\n    /* This fills the remaining space, by using flexbox. \\r\\n       Every toolbar row uses a flexbox row layout. */\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9vbGJhci90b29sYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSTtzREFDa0Q7SUFDbEQsZUFBZTtHQUNoQiIsImZpbGUiOiJzcmMvYXBwL3Rvb2xiYXIvdG9vbGJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpbGwtcmVtYWluaW5nLXNwYWNlIHtcclxuICAgIC8qIFRoaXMgZmlsbHMgdGhlIHJlbWFpbmluZyBzcGFjZSwgYnkgdXNpbmcgZmxleGJveC4gXHJcbiAgICAgICBFdmVyeSB0b29sYmFyIHJvdyB1c2VzIGEgZmxleGJveCByb3cgbGF5b3V0LiAqL1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbiAgfSJdfQ== */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span>AZURE Cloud Sample App</span>\\r\\n\\r\\n  <!-- This fills the remaining space of the current row -->\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n\\r\\n  <span *ngIf=\\\"!authenticated\\\" (click)=\\\"login()\\\">\\r\\n    <button mat-raised-button>Login</button>\\r\\n  </span>\\r\\n  <span *ngIf=\\\"authenticated\\\" (click)=\\\"logout()\\\">\\r\\n    <button mat-raised-button>Logout</button>\\r\\n  </span>\\r\\n</mat-toolbar>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdalService } from 'adal-angular4';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  constructor(private adalService: AdalService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.adalService.handleWindowCallback();\r\n\r\n    console.log(this.adalService.userInfo);\r\n  }\r\n\r\n  login() {\r\n    this.adalService.login();\r\n  }\r\n\r\n  logout() {\r\n    this.adalService.logOut();\r\n  }\r\n\r\n  get authenticated(): boolean {\r\n    return this.adalService.userInfo.authenticated;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  config: {\r\n    tenant: 'e51d0b21-2675-4b65-a5b1-bdf12f831de0',\r\n    clientId: '6fd62b98-b683-4494-b025-71943c906941',\r\n    endpoints: {\r\n      'https://graph.microsoft.com': '00000003-0000-0000-c000-000000000000'\r\n    }\r\n  }\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}